{"ast":null,"code":"import _regeneratorRuntime from \"/Users/vaishalisrivastava/Desktop/weather-calculator-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/vaishalisrivastava/Desktop/weather-calculator-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/vaishalisrivastava/Desktop/weather-calculator-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vaishalisrivastava/Desktop/weather-calculator-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vaishalisrivastava/Desktop/weather-calculator-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vaishalisrivastava/Desktop/weather-calculator-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vaishalisrivastava/Desktop/weather-calculator-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vaishalisrivastava/Desktop/weather-calculator-app/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport './css/global.css';\nimport './css/custom.css';\nimport './css/colors.css';\nimport WeatherApp from './components/weather-calculator';\nimport FormApp from './components/form';\nimport Header from './components/header';\nvar API_KEY = 'ede8080f6378fcfb399d37596d75fdcf';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n              case 5:\n                api_call = _context.sent;\n                _context.next = 8;\n                return api_call.json();\n\n              case 8:\n                data = _context.sent;\n                console.log(data);\n\n                _this.setState({\n                  temperature: data.main.temp,\n                  city: data.name,\n                  country: data.sys.country,\n                  humidity: data.main.humidity,\n                  description: data.weather[0].description,\n                  error: ''\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper pink-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(FormApp, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(WeatherApp, {\n        temperature: this.state.temperature,\n        city: this.state.city,\n        country: this.state.country,\n        humidity: this.state.humidity,\n        description: this.state.description,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/vaishalisrivastava/Desktop/weather-calculator-app/src/App.js"],"names":["React","Component","WeatherApp","FormApp","Header","API_KEY","App","props","getWeather","e","preventDefault","city","target","elements","value","country","fetch","api_call","json","data","console","log","setState","temperature","main","temp","name","sys","humidity","description","weather","error","state","undefined"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAO,kBAAP;AACA,OAAO,kBAAP;AACA,OAAO,kBAAP;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,IAAMC,OAAO,GAAG,kCAAhB;;IAGMC,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;;AADgB,UAYlBC,UAZkB;AAAA;AAAA;AAAA;AAAA;AAAA,+BAYL,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,gBAAAA,CAAC,CAACC,cAAF;AACMC,gBAAAA,IAFG,GAEIF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAF3B;AAGHC,gBAAAA,OAHG,GAGON,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBE,OAAlB,CAA0BD,KAHjC;AAAA;AAAA,uBAKcE,KAAK,4DAAqDL,IAArD,cAA6DI,OAA7D,oBAA8EV,OAA9E,mBALnB;;AAAA;AAKHY,gBAAAA,QALG;AAAA;AAAA,uBAMUA,QAAQ,CAACC,IAAT,EANV;;AAAA;AAMHC,gBAAAA,IANG;AAOTC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,sBAAKG,QAAL,CAAc;AACZC,kBAAAA,WAAW,EAACJ,IAAI,CAACK,IAAL,CAAUC,IADV;AAEZd,kBAAAA,IAAI,EAACQ,IAAI,CAACO,IAFE;AAGZX,kBAAAA,OAAO,EAACI,IAAI,CAACQ,GAAL,CAASZ,OAHL;AAIZa,kBAAAA,QAAQ,EAACT,IAAI,CAACK,IAAL,CAAUI,QAJP;AAKZC,kBAAAA,WAAW,EAACV,IAAI,CAACW,OAAL,CAAa,CAAb,EAAgBD,WALhB;AAMZE,kBAAAA,KAAK,EAAC;AANM,iBAAd;;AATS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAZK;;AAAA;AAAA;AAAA;AAAA;;AAEhB,UAAKC,KAAL,GAAa;AACXT,MAAAA,WAAW,EAAGU,SADH;AAEXtB,MAAAA,IAAI,EAAGsB,SAFI;AAGXlB,MAAAA,OAAO,EAAGkB,SAHC;AAIXL,MAAAA,QAAQ,EAAGK,SAJA;AAKXJ,MAAAA,WAAW,EAAGI,SALH;AAMXF,MAAAA,KAAK,EAAGE;AANG,KAAb;AAFgB;AAWjB;;;;6BAmBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAE,KAAKzB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,UAAD;AACE,QAAA,WAAW,EAAE,KAAKwB,KAAL,CAAWT,WAD1B;AAEE,QAAA,IAAI,EAAE,KAAKS,KAAL,CAAWrB,IAFnB;AAGE,QAAA,OAAO,EAAE,KAAKqB,KAAL,CAAWjB,OAHtB;AAIE,QAAA,QAAQ,EAAE,KAAKiB,KAAL,CAAWJ,QAJvB;AAKE,QAAA,WAAW,EAAE,KAAKI,KAAL,CAAWH,WAL1B;AAME,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWD,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,CADF;AAgBD;;;;EAhDe9B,S;;AAmDlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './css/global.css';\nimport './css/custom.css';\nimport './css/colors.css';\nimport WeatherApp from './components/weather-calculator';\nimport FormApp from './components/form';\nimport Header from './components/header';\n\nconst API_KEY = 'ede8080f6378fcfb399d37596d75fdcf';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      temperature : undefined,\n      city : undefined,\n      country : undefined,\n      humidity : undefined,\n      description : undefined,\n      error : undefined\n\n    }\n  }\n  getWeather = async (e) => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n      const data = await api_call.json();\n      console.log(data);\n\n      this.setState({\n        temperature:data.main.temp,\n        city:data.name,\n        country:data.sys.country,\n        humidity:data.main.humidity,\n        description:data.weather[0].description,\n        error:''\n      })\n    }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper pink-text\">\n          <Header />\n          <FormApp getWeather={this.getWeather}/>\n          <WeatherApp \n            temperature={this.state.temperature}\n            city={this.state.city}\n            country={this.state.country}\n            humidity={this.state.humidity}\n            description={this.state.description}\n            error={this.state.error}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}